# Módulos padrão do Python (import, from, as e *)
# https://docs.python.org/3/py-modindex.html

# inteiro - import nome_modulo
# --> import sys

# Vantagens: você tem o namespace do módulo
#print(sys.plataform)

# Desvantagens: nomes grandes, pois precisa do sys."algo".. sempre 


# >>> Codigo direto 

# import sys
# platform = 'A MINHA'
# print(sys.platform)
# print(platform)






# partes - from nome_modulo import objeto1, objeto2

# Vantagens: nomes pequenos
# Desvantagens: Sem o namespace do módulo

#Warning: Cono não tem o namespace do modulo, vc vai importar e escrever diretamente sem precisar usar sys."algo", 

# >>> Codigo direto
# from sys import exit, platform
# print(platform)
# exit()

# Não pode escrever nenhuma função com exit pois vai dar conflito com a do modulo importado. Pois não usa namespace







# alias 1 - import nome_modulo as apelido

# >>> Codigo direto
# import sys as s

# sys = 'alguma coisa'
# print(s.platform)
# print(sys)


# Para não dar conflito o sys com a variável do código importo ela as >>s<<, e o namespace para utilizar no código vai ser o s, como ta ali em s.platform







# alias 2 - from nome_modulo import objeto as apelido

# >> Codigo direto
# from sys import exit as ex
# from sys import platform as pf

# print(pf)

# Vantagens: você pode reservar nomes para seu código
# Desvantagens: pode ficar fora do padrão da linguagem



# má prática - from nome_modulo import *
# Vantagens: importa tudo de um módulo
# Desvantagens: importa tudo de um módulo
# from sys import exit, platform

# print(platform)
# exit()